stages:
  - build
  - docker_tag
  - push_dockerhub
  - deploy
  - admin

  # generic setup
image: vikyai/tools-gitlab-auto-deploy-image:latest
before_script:
  # load auto-deploy if exits (not in test)
  - if [ -f /auto-deploy.sh ]; then . /auto-deploy.sh ; fi

variables:
  DOCKER_IMAGE_DOC: ${CI_REGISTRY_IMAGE}

.kubernetes_runner:
  tags:
    - kubernetes
  variables:
    CI_SERVICE_HOST: "127.0.0.1"

# Build docker image
build_doc:
  extends: .kubernetes_runner
  stage: build
  script:
    - docker_build ${DOCKER_IMAGE_DOC} .

# Tag docker image to latest
tag_doc:
  extends: .kubernetes_runner
  stage: docker_tag
  only:
    - master
  script:
    - docker_tag_latest ${DOCKER_IMAGE_DOC}

# Push Docker image to Dockerhub only when on Master and it's a Tag
push_dockerhub:
  extends: .kubernetes_runner
  stage: push_dockerhub
  needs:
    - "tag_doc"
  only:
    - master
  script:
    - docker_push_gitlab_to_dockerhub "${DOCKER_IMAGE_DOC}" "vikyai/doc:latest"

# Deploy
deploy:
  extends: .kubernetes_runner
  stage: deploy
  environment:
    name: ${CI_COMMIT_REF_NAME}
    url: https://viky-dev-doc-${CI_COMMIT_REF_SLUG}-kube.viky.ai
    on_stop: delete_env
  script:
    # update image fo the doc
    - kube_setup
    - cd deployment
    - export DOC_DOMAIN="viky-dev-doc-${CI_COMMIT_REF_SLUG}-kube.viky.ai"
    - envsubst < deploy.yaml | kubectl apply -f -

# Remove
delete_env:
  extends: .kubernetes_runner
  stage: admin
  environment:
    name: ${CI_COMMIT_REF_NAME}
    action: stop
  script:
    - kube_setup
    - kubectl get all
    - kube_cleanup
  when: manual
  allow_failure: true
